[gd_scene load_steps=23 format=3 uid="uid://b3uvg3j4qge8o"]

[ext_resource type="PackedScene" uid="uid://rp0n2dfx0chj" path="res://glb_imports/8164_meshes.glb" id="1_mluec"]

[sub_resource type="Shader" id="Shader_065xt"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_s7a6n"]
render_priority = 0
shader = SubResource("Shader_065xt")
shader_parameter/outline_color = Color(0.431373, 0.431373, 0.431373, 1)
shader_parameter/outline_width = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_6w36t"]
next_pass = SubResource("ShaderMaterial_s7a6n")
albedo_color = Color(0.745098, 0.745098, 0.745098, 1)
roughness = 0.0

[sub_resource type="Shader" id="Shader_lib57"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ygth1"]
render_priority = 0
shader = SubResource("Shader_lib57")
shader_parameter/outline_color = Color(0.431373, 0.431373, 0.431373, 1)
shader_parameter/outline_width = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_toeh3"]
next_pass = SubResource("ShaderMaterial_ygth1")
albedo_color = Color(0.745098, 0.745098, 0.745098, 1)
roughness = 0.0

[sub_resource type="Shader" id="Shader_pnwi6"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_jxmun"]
render_priority = 0
shader = SubResource("Shader_pnwi6")
shader_parameter/outline_color = Color(0.431373, 0.431373, 0.431373, 1)
shader_parameter/outline_width = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_l037o"]
next_pass = SubResource("ShaderMaterial_jxmun")
albedo_color = Color(0.745098, 0.745098, 0.745098, 1)
roughness = 0.0

[sub_resource type="Shader" id="Shader_tiwuv"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_tobhi"]
render_priority = 0
shader = SubResource("Shader_tiwuv")
shader_parameter/outline_color = Color(0.431373, 0.431373, 0.431373, 1)
shader_parameter/outline_width = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_nw6f6"]
next_pass = SubResource("ShaderMaterial_tobhi")
albedo_color = Color(0.745098, 0.745098, 0.745098, 1)
roughness = 0.0

[sub_resource type="Shader" id="Shader_hcnm2"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_pecgi"]
render_priority = 0
shader = SubResource("Shader_hcnm2")
shader_parameter/outline_color = Color(0.431373, 0.431373, 0.431373, 1)
shader_parameter/outline_width = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ot1fy"]
next_pass = SubResource("ShaderMaterial_pecgi")
albedo_color = Color(0.745098, 0.745098, 0.745098, 1)
roughness = 0.0

[sub_resource type="Shader" id="Shader_vfain"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_n30ri"]
render_priority = 0
shader = SubResource("Shader_vfain")
shader_parameter/outline_color = Color(0.431373, 0.431373, 0.431373, 1)
shader_parameter/outline_width = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_woqvd"]
next_pass = SubResource("ShaderMaterial_n30ri")
albedo_color = Color(0.745098, 0.745098, 0.745098, 1)
roughness = 0.0

[sub_resource type="Shader" id="Shader_8oy8s"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_keq6n"]
render_priority = 0
shader = SubResource("Shader_8oy8s")
shader_parameter/outline_color = Color(0.431373, 0.431373, 0.431373, 1)
shader_parameter/outline_width = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_wmyen"]
next_pass = SubResource("ShaderMaterial_keq6n")
albedo_color = Color(0.745098, 0.745098, 0.745098, 1)
roughness = 0.0

[node name="X_boss_meshes" instance=ExtResource("1_mluec")]
transform = Transform3D(-0.1, 3.48787e-17, -8.74228e-09, 3.48787e-17, 0.1, -3.48787e-17, 8.74228e-09, -3.48787e-17, -0.1, 2.08165e-12, -1.023, 2.08165e-12)

[node name="Skeleton3D" parent="Armature" index="0"]
bones/0/position = Vector3(6.48096e-08, 11.0819, -0.214847)
bones/0/rotation = Quaternion(0.21644, 9.12654e-12, -4.11755e-11, 0.976296)
bones/1/rotation = Quaternion(0.0612991, 2.58694e-12, 4.20951e-11, 0.998119)
bones/2/rotation = Quaternion(0.0871557, 1.50712e-18, -1.83863e-17, 0.996195)
bones/3/rotation = Quaternion(0.079198, 1.50557e-18, -1.83674e-17, 0.996857)
bones/4/rotation = Quaternion(0.0691391, -1.02747e-18, -4.51464e-18, 0.997607)
bones/8/rotation = Quaternion(0.577536, -0.042512, 0.0292635, 0.814732)
bones/9/rotation = Quaternion(-8.41664e-08, -2.1278e-07, 0.471522, 0.881854)
bones/10/rotation = Quaternion(0.076823, 0.669839, -0.0562462, 0.736376)
bones/12/rotation = Quaternion(0.577161, 0.0432188, -0.0219583, 0.81519)
bones/13/rotation = Quaternion(-7.98483e-07, 1.47913e-06, -0.475992, 0.87945)
bones/14/rotation = Quaternion(0.0887912, -0.670038, 0.0666006, 0.733982)
bones/15/rotation = Quaternion(-0.0399842, -0.569072, -0.818011, 0.0735966)
bones/15/scale = Vector3(1, 1, 0.999999)
bones/16/rotation = Quaternion(-0.730598, -3.23055e-06, -2.60338e-06, 0.682808)
bones/17/rotation = Quaternion(0.690991, 0.0190827, 0.000697256, 0.722612)
bones/18/rotation = Quaternion(0.276961, 0.230053, -0.0684875, 0.930418)
bones/20/rotation = Quaternion(-0.0244481, 0.544612, 0.835865, 0.0642643)
bones/20/scale = Vector3(1, 1, 0.999999)
bones/21/rotation = Quaternion(-0.650962, 6.7199e-06, 6.76642e-06, 0.75911)
bones/22/rotation = Quaternion(0.489316, -0.0204317, -0.016464, 0.871712)
bones/23/rotation = Quaternion(0.280818, -0.231228, 0.0698284, 0.92887)

[node name="Body_001" parent="Armature/Skeleton3D" index="0"]
surface_material_override/0 = SubResource("StandardMaterial3D_6w36t")
surface_material_override/1 = SubResource("StandardMaterial3D_toeh3")
surface_material_override/2 = SubResource("StandardMaterial3D_toeh3")
surface_material_override/3 = SubResource("StandardMaterial3D_l037o")
surface_material_override/4 = SubResource("StandardMaterial3D_nw6f6")
surface_material_override/5 = SubResource("StandardMaterial3D_toeh3")
surface_material_override/6 = SubResource("StandardMaterial3D_ot1fy")
surface_material_override/7 = SubResource("StandardMaterial3D_woqvd")
surface_material_override/8 = SubResource("StandardMaterial3D_wmyen")

[node name="LeftArm" type="BoneAttachment3D" parent="Armature/Skeleton3D" index="1"]
transform = Transform3D(-0.026358, 0.207528, -0.977874, 0.710122, -0.684609, -0.164431, -0.703585, -0.698744, -0.129325, 3.5919, 16.7195, 4.07719)
bone_name = "mixamorig_LeftArm"
bone_idx = 8

[node name="RightArm" type="BoneAttachment3D" parent="Armature/Skeleton3D" index="2"]
transform = Transform3D(-0.0284395, -0.207637, 0.977793, -0.716262, -0.678086, -0.164826, 0.697252, -0.705043, -0.129438, -3.5919, 16.6915, 4.09743)
bone_name = "mixamorig_RightArm"
bone_idx = 12
