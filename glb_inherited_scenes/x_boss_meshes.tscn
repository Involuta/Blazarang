[gd_scene load_steps=28 format=3 uid="uid://b3uvg3j4qge8o"]

[ext_resource type="PackedScene" uid="uid://rp0n2dfx0chj" path="res://glb_imports/8164_meshes.glb" id="1_mluec"]

[sub_resource type="Shader" id="Shader_065xt"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_s7a6n"]
render_priority = 0
shader = SubResource("Shader_065xt")
shader_parameter/outline_color = Color(0.431373, 0.431373, 0.431373, 1)
shader_parameter/outline_width = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_6w36t"]
next_pass = SubResource("ShaderMaterial_s7a6n")
albedo_color = Color(0.745098, 0.745098, 0.745098, 1)
roughness = 0.0

[sub_resource type="Shader" id="Shader_lib57"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ygth1"]
render_priority = 0
shader = SubResource("Shader_lib57")
shader_parameter/outline_color = Color(0.431373, 0.431373, 0.431373, 1)
shader_parameter/outline_width = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_toeh3"]
next_pass = SubResource("ShaderMaterial_ygth1")
albedo_color = Color(0.745098, 0.745098, 0.745098, 1)
roughness = 0.0

[sub_resource type="Shader" id="Shader_pnwi6"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_jxmun"]
render_priority = 0
shader = SubResource("Shader_pnwi6")
shader_parameter/outline_color = Color(0.431373, 0.431373, 0.431373, 1)
shader_parameter/outline_width = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_l037o"]
next_pass = SubResource("ShaderMaterial_jxmun")
albedo_color = Color(0.745098, 0.745098, 0.745098, 1)
roughness = 0.0

[sub_resource type="Shader" id="Shader_tiwuv"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_tobhi"]
render_priority = 0
shader = SubResource("Shader_tiwuv")
shader_parameter/outline_color = Color(0.431373, 0.431373, 0.431373, 1)
shader_parameter/outline_width = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_nw6f6"]
next_pass = SubResource("ShaderMaterial_tobhi")
albedo_color = Color(0.745098, 0.745098, 0.745098, 1)
roughness = 0.0

[sub_resource type="Shader" id="Shader_hcnm2"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_pecgi"]
render_priority = 0
shader = SubResource("Shader_hcnm2")
shader_parameter/outline_color = Color(0.431373, 0.431373, 0.431373, 1)
shader_parameter/outline_width = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ot1fy"]
next_pass = SubResource("ShaderMaterial_pecgi")
albedo_color = Color(0.745098, 0.745098, 0.745098, 1)
roughness = 0.0

[sub_resource type="Shader" id="Shader_vfain"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_n30ri"]
render_priority = 0
shader = SubResource("Shader_vfain")
shader_parameter/outline_color = Color(0.431373, 0.431373, 0.431373, 1)
shader_parameter/outline_width = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_woqvd"]
next_pass = SubResource("ShaderMaterial_n30ri")
albedo_color = Color(0.745098, 0.745098, 0.745098, 1)
roughness = 0.0

[sub_resource type="Shader" id="Shader_8oy8s"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_keq6n"]
render_priority = 0
shader = SubResource("Shader_8oy8s")
shader_parameter/outline_color = Color(0.431373, 0.431373, 0.431373, 1)
shader_parameter/outline_width = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_wmyen"]
next_pass = SubResource("ShaderMaterial_keq6n")
albedo_color = Color(0.745098, 0.745098, 0.745098, 1)
roughness = 0.0

[sub_resource type="Curve" id="Curve_yh0sc"]
_data = [Vector2(2.08165e-12, 1), 0.0, 0.0, 0, 0, Vector2(1, 2.08165e-12), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_ydrjc"]
curve = SubResource("Curve_yh0sc")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_vtshv"]
direction = Vector3(2.08165e-12, -1, 2.08165e-12)
spread = 10.0
gravity = Vector3(2.08165e-12, 2.08165e-12, 2.08165e-12)
initial_velocity_min = 40.0
initial_velocity_max = 40.0
scale_curve = SubResource("CurveTexture_ydrjc")
color = Color(1, 0.270588, 0, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_on8av"]
shading_mode = 0
vertex_color_use_as_albedo = true
billboard_mode = 1
billboard_keep_scale = true

[sub_resource type="QuadMesh" id="QuadMesh_eqjva"]
material = SubResource("StandardMaterial3D_on8av")
size = Vector2(0.1, 0.1)

[node name="X_boss_meshes" instance=ExtResource("1_mluec")]
transform = Transform3D(-0.1, 3.48787e-17, -8.74228e-09, 3.48787e-17, 0.1, -3.48787e-17, 8.74228e-09, -3.48787e-17, -0.1, 2.08165e-12, -1.426, 2.08165e-12)

[node name="Skeleton3D" parent="Armature" index="0"]
bones/0/position = Vector3(-1, 9.6354, -1.23273)
bones/0/rotation = Quaternion(0.258819, 1.09164e-11, -4.07385e-11, 0.965926)
bones/4/rotation = Quaternion(-0.23369, -3.3746e-18, 5.73608e-17, 0.972311)
bones/8/rotation = Quaternion(-0.248695, -0.215593, 0.578462, 0.74636)
bones/9/rotation = Quaternion(-1.4505e-07, -1.73532e-07, 0.674224, 0.738527)
bones/10/rotation = Quaternion(-0.015565, -0.029247, 0.0666454, 0.997227)
bones/12/rotation = Quaternion(0.503487, -0.193329, 0.235127, 0.808604)
bones/13/rotation = Quaternion(-4.4963e-07, 1.61493e-06, -0.261454, 0.965216)
bones/14/rotation = Quaternion(-0.033585, -0.781599, -0.0773525, 0.618055)
bones/15/rotation = Quaternion(-0.136409, -0.684193, -0.701839, 0.143854)
bones/15/scale = Vector3(1.00001, 0.999997, 0.999997)
bones/16/rotation = Quaternion(-0.745651, -3.19382e-06, -2.67052e-06, 0.666336)
bones/17/rotation = Quaternion(0.766092, 0.0951232, -0.0845339, 0.630007)
bones/18/rotation = Quaternion(0.276979, 0.230067, -0.06844, 0.930413)
bones/20/rotation = Quaternion(-0.046464, 0.0820622, 0.995432, 0.0149187)
bones/20/scale = Vector3(1.00002, 1, 0.999983)
bones/21/rotation = Quaternion(-0.573904, 7.33805e-06, 6.08266e-06, 0.818923)
bones/22/rotation = Quaternion(0.815454, -0.0425624, -0.0285533, 0.576549)
bones/23/rotation = Quaternion(0.280682, -0.231211, 0.0698879, 0.928911)

[node name="Body_001" parent="Armature/Skeleton3D" index="0"]
surface_material_override/0 = SubResource("StandardMaterial3D_6w36t")
surface_material_override/1 = SubResource("StandardMaterial3D_toeh3")
surface_material_override/2 = SubResource("StandardMaterial3D_toeh3")
surface_material_override/3 = SubResource("StandardMaterial3D_l037o")
surface_material_override/4 = SubResource("StandardMaterial3D_nw6f6")
surface_material_override/5 = SubResource("StandardMaterial3D_toeh3")
surface_material_override/6 = SubResource("StandardMaterial3D_ot1fy")
surface_material_override/7 = SubResource("StandardMaterial3D_woqvd")
surface_material_override/8 = SubResource("StandardMaterial3D_wmyen")

[node name="LeftArm" type="BoneAttachment3D" parent="Armature/Skeleton3D" index="1"]
transform = Transform3D(0.955225, 0.294729, 0.026062, -0.0293192, 0.181937, -0.982873, -0.294423, 0.938101, 0.182432, 2.5919, 16.0654, 2.00101)
bone_name = "mixamorig_LeftArm"
bone_idx = 8

[node name="RightArm" type="BoneAttachment3D" parent="Armature/Skeleton3D" index="2"]
transform = Transform3D(-0.113936, -0.283672, 0.952129, -0.876944, -0.421671, -0.23057, 0.466892, -0.861234, -0.200721, -4.5919, 16.0481, 2.03091)
bone_name = "mixamorig_RightArm"
bone_idx = 12

[node name="LeftFoot" type="BoneAttachment3D" parent="Armature/Skeleton3D" index="3"]
transform = Transform3D(-0.989503, 0.141846, -0.0278323, -0.0890422, -0.446415, 0.890382, 0.113878, 0.88351, 0.454355, 2.00005, 3.1986, 0.0123334)
bone_name = "mixamorig_LeftFoot"
bone_idx = 17

[node name="GPUParticles3D" type="GPUParticles3D" parent="Armature/Skeleton3D/LeftFoot" index="0"]
amount = 12
process_material = SubResource("ParticleProcessMaterial_vtshv")
draw_pass_1 = SubResource("QuadMesh_eqjva")

[node name="RightFoot" type="BoneAttachment3D" parent="Armature/Skeleton3D" index="4"]
transform = Transform3D(-0.997551, -0.0495844, 0.0496902, 0.0628835, -0.945821, 0.318533, 0.031198, 0.320858, 0.946598, -2, 3.99985, -7.59331)
bone_name = "mixamorig_RightFoot"
bone_idx = 22

[node name="GPUParticles3D" type="GPUParticles3D" parent="Armature/Skeleton3D/RightFoot" index="0"]
amount = 12
process_material = SubResource("ParticleProcessMaterial_vtshv")
draw_pass_1 = SubResource("QuadMesh_eqjva")
