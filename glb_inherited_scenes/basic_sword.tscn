[gd_scene load_steps=20 format=3 uid="uid://dasrfemvybmv"]

[ext_resource type="PackedScene" uid="uid://cpx64anoc5p8u" path="res://glb_imports/BasicSwordBlade.glb" id="1_k4b5i"]
[ext_resource type="Shader" path="res://GPUTrail-main/shaders/trail.gdshader" id="2_iitfv"]
[ext_resource type="Texture2D" uid="uid://ct31fhxvcragr" path="res://GPUTrail-main/defaults/curve.tres" id="5_4x7ld"]
[ext_resource type="Script" path="res://GPUTrail-main/GPUTrail3D.gd" id="6_eaulg"]
[ext_resource type="PackedScene" uid="uid://c44esoip3q0s1" path="res://glb_inherited_scenes/basic_sword_handle.tscn" id="7_88eje"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_qbx8q"]
shading_mode = 0
albedo_color = Color(1, 1, 0, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_jp5km"]
shader = ExtResource("2_iitfv")

[sub_resource type="Shader" id="Shader_13v3n"]
code = "shader_type spatial;

render_mode unshaded,world_vertex_coords,cull_disabled;

uniform sampler2D tex : repeat_disable, source_color, hint_default_white;
uniform sampler2D color_ramp : repeat_disable, source_color, hint_default_white;
uniform sampler2D curve : repeat_disable, hint_default_white;
uniform mat4 emmission_transform = mat4(1);
uniform int flags = 0;
/*uniform bool vertical_texture = false;
uniform bool use_red_as_alpha = false;
uniform bool billboard = false;
uniform bool dewiggle = false;
uniform bool snap_to_transform = false;*/

#define vertical_texture  bool(flags & 1)
#define use_red_as_alpha  bool(flags & 2)
#define billboard		  bool(flags & 4)
#define dewiggle 		  bool(flags & 8)
#define snap_to_transform bool(flags & 16)
#define clip_overlaps bool(flags & 32)


varying float scale_interp;
varying vec2 clip;
varying vec2 mesh_uv;
void vertex(){
	mesh_uv = UV;
	
	mat4 my_model_matrix = MODEL_MATRIX;
	if(snap_to_transform && INSTANCE_CUSTOM.w==2.0){
		my_model_matrix[1] = emmission_transform * vec4(0,1,0,1);
		my_model_matrix[2] = emmission_transform * vec4(0,-1,0,1);
	}
	
	if(billboard){
		vec3 t0 = my_model_matrix[0].xyz-my_model_matrix[3].xyz;
		vec3 t1 = my_model_matrix[1].xyz-my_model_matrix[2].xyz;
		
		//vec3 up1 = up0;
		vec3 up0 = length(t0)*normalize(
			cross(
				my_model_matrix[3].xyz-INV_VIEW_MATRIX[3].xyz,
				//-INV_VIEW_MATRIX[2].xyz,
				t0));
		vec3 up1 = length(t1)*normalize(
			cross(
				my_model_matrix[2].xyz-INV_VIEW_MATRIX[3].xyz,
				//-INV_VIEW_MATRIX[2].xyz,
				t1));
		
		my_model_matrix[0] = my_model_matrix[3];
		my_model_matrix[1] = my_model_matrix[2];
		
		my_model_matrix[0].xyz += up0;
		my_model_matrix[3].xyz -= up0;
		
		my_model_matrix[1].xyz += up1;
		my_model_matrix[2].xyz -= up1;
	}
	
	vec3 a = mix(my_model_matrix[1].xyz,my_model_matrix[0].xyz,UV.x);
	vec3 b = mix(my_model_matrix[2].xyz,my_model_matrix[3].xyz,UV.x);

	UV.x = (UV.x + INSTANCE_CUSTOM.w-1.0 - 2.0)/(INSTANCE_CUSTOM.z-1.0);

	
	float h = textureLod(curve, vec2(UV.x), 0.0).x;//h=1.0;
	
	VERTEX = mix(a,b,(UV.y-0.5)*h + 0.5);

	if(dewiggle){
		scale_interp = h;
		UV *= scale_interp;
	}
	
		
	clip.x = dot(VERTEX - INV_VIEW_MATRIX[3].xyz,cross(my_model_matrix[1].xyz - INV_VIEW_MATRIX[3].xyz,my_model_matrix[2].xyz - INV_VIEW_MATRIX[3].xyz));
	clip.y = dot(VERTEX - INV_VIEW_MATRIX[3].xyz,cross(my_model_matrix[3].xyz - INV_VIEW_MATRIX[3].xyz,my_model_matrix[0].xyz - INV_VIEW_MATRIX[3].xyz));
}

void fragment(){
	//if(billboard && !FRONT_FACING) discard;
	
	vec2 clip0 = clip;
	float ababab = clip0.x*clip0.y;
	//ababab += dFdx(ababab) + dFdy(ababab);
	//clip0 -= fwidth(clip0);
	if(clip_overlaps && ababab < 0.0) { 
		
		
		
		if(abs(mesh_uv.x-0.5)<0.5)
			discard;
	}
	
	vec2 base_uv = UV;

	if(dewiggle){
		base_uv /= scale_interp;
	}
	
	vec2 raw_uv = base_uv;

	if(vertical_texture){
		base_uv = base_uv.yx;
	}
	
	vec4 T = textureLod(tex, base_uv, 0.0);
	ALBEDO = T.rgb;
	ALPHA = T.a;
	
	if(use_red_as_alpha){
		ALBEDO = vec3(1);
		ALPHA = T.r;
	}
	
	T = textureLod(color_ramp, raw_uv, 0.0);
	ALBEDO *= T.rgb;
	ALPHA *= T.a;
	
	//ALBEDO = vec3(UV,0);
	
	if((base_uv.x < .01) || (.99 < base_uv.x)){
		//ALBEDO = vec3(1,0,1);
	}
}"

[sub_resource type="Gradient" id="Gradient_cx3l6"]
colors = PackedColorArray(1, 1, 0, 0.588235, 1, 1, 0, 0.0392157)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_avxio"]
gradient = SubResource("Gradient_cx3l6")

[sub_resource type="Gradient" id="Gradient_53tnv"]
colors = PackedColorArray(1, 1, 0, 0.588235, 1, 1, 0, 0.0392157)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_2cfx4"]
gradient = SubResource("Gradient_53tnv")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_j6ckp"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_13v3n")
shader_parameter/emmission_transform = Projection(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
shader_parameter/flags = 40
shader_parameter/tex = SubResource("GradientTexture1D_2cfx4")
shader_parameter/color_ramp = SubResource("GradientTexture1D_avxio")
shader_parameter/curve = ExtResource("5_4x7ld")

[sub_resource type="QuadMesh" id="QuadMesh_8ktjm"]
material = SubResource("ShaderMaterial_j6ckp")

[sub_resource type="Animation" id="Animation_kv86i"]
resource_name = "BigExtendBlade"
length = 0.116668
step = 0.0166667
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Blade:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.116667),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(1, 0.001, 1), Vector3(3, 3, 3)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("BasicSwordHandle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.116667),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(1, 1, 1), Vector3(3, 1, 3)]
}

[sub_resource type="Animation" id="Animation_670cs"]
resource_name = "BigRetractBlade"
length = 0.116668
step = 0.0166667
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Blade:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.116667),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(3, 3, 3), Vector3(1, 0.001, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("BasicSwordHandle:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.116667),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(3, 1, 3), Vector3(1, 1, 1)]
}

[sub_resource type="Animation" id="Animation_0cncl"]
resource_name = "ExtendBlade"
length = 0.116667
step = 0.0166667
tracks/0/type = "scale_3d"
tracks/0/imported = true
tracks/0/enabled = true
tracks/0/path = NodePath("Blade")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = PackedFloat32Array(0, 1, 1, 0.001, 1, 0.0333333, 1, 1, 0.199052, 1, 0.0666667, 1, 1, 0.606808, 1, 0.1, 1, 1, 0.944662, 1, 0.116667, 1, 1, 1, 1)

[sub_resource type="Animation" id="Animation_57cxp"]
resource_name = "RetractBlade"
length = 0.116667
tracks/0/type = "scale_3d"
tracks/0/imported = true
tracks/0/enabled = true
tracks/0/path = NodePath("Blade")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = PackedFloat32Array(0, 1, 1, 1, 1, 0.0333333, 1, 1, 0.801948, 1, 0.0666667, 1, 1, 0.394192, 1, 0.1, 1, 1, 0.0563383, 1, 0.116667, 1, 1, 0.001, 1)

[sub_resource type="AnimationLibrary" id="AnimationLibrary_v7csg"]
_data = {
"BigExtendBlade": SubResource("Animation_kv86i"),
"BigRetractBlade": SubResource("Animation_670cs"),
"ExtendBlade": SubResource("Animation_0cncl"),
"RetractBlade": SubResource("Animation_57cxp")
}

[node name="BasicSword" instance=ExtResource("1_k4b5i")]
transform = Transform3D(1.5, -5.2318e-16, 1.13356e-15, 5.2318e-16, 1.5, -1.13356e-15, -5.2318e-16, 5.2318e-16, 3.25, 0, 0, 0)

[node name="Blade" parent="." index="0"]
transform = Transform3D(1, 1.57912e-25, 6.90255e-30, 0, -4.37114e-11, 1, 1.57912e-22, -0.001, -4.37114e-08, 3.66788e-16, -3.66788e-16, -0.485357)
surface_material_override/0 = SubResource("StandardMaterial3D_qbx8q")

[node name="GPUTrail3D" type="GPUParticles3D" parent="." index="1"]
transform = Transform3D(3.75, 6.32035e-22, 2.26066e-22, -7.27919e-23, -1.63918e-07, 3.75, 7.93184e-23, -3.75, -1.63918e-07, 0.25, 0.17, -3.98536)
amount = 12
lifetime = 12.0
explosiveness = 1.0
fixed_fps = 0
process_material = SubResource("ShaderMaterial_jp5km")
draw_pass_1 = SubResource("QuadMesh_8ktjm")
script = ExtResource("6_eaulg")
length = 12
color_ramp = SubResource("GradientTexture1D_avxio")
curve = ExtResource("5_4x7ld")
_defaults_have_been_set = true

[node name="AnimationPlayer" parent="." index="2"]
libraries = {
"": SubResource("AnimationLibrary_v7csg")
}

[node name="BasicSwordHandle" parent="." index="3" instance=ExtResource("7_88eje")]
transform = Transform3D(1, 1.57912e-22, 6.90255e-30, 0, -4.37114e-08, 1, 1.57912e-22, -1, -4.37114e-08, 3.66788e-16, -3.66788e-16, -0.485357)
