[gd_scene load_steps=25 format=3 uid="uid://b2i61ldwbwc8o"]

[ext_resource type="PackedScene" uid="uid://cpx64anoc5p8u" path="res://glb_imports/BasicSwordBlade.glb" id="1_magb4"]
[ext_resource type="Texture2D" uid="uid://crk6pkb7e5rwc" path="res://GPUTrail-main/defaults/texture.tres" id="4_oc1t2"]
[ext_resource type="Texture2D" uid="uid://ct31fhxvcragr" path="res://GPUTrail-main/defaults/curve.tres" id="5_e2cg4"]
[ext_resource type="PackedScene" uid="uid://cwui2mc0avv1y" path="res://glb_inherited_scenes/x_left_arm.tscn" id="5_er6wh"]
[ext_resource type="Script" path="res://GPUTrail-main/GPUTrail3D.gd" id="6_bnh63"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_qbx8q"]
shading_mode = 0
albedo_color = Color(1, 0.270588, 0, 1)

[sub_resource type="Shader" id="Shader_ras3i"]
code = "shader_type particles;

render_mode keep_data,disable_force,disable_velocity;



void process() {
	// CUSTOM.w tracks the particles place in the trail, in range (0..LIFETIME]
	// requires that LIFETIME = number of particles
	const float amount = LIFETIME;
	
	vec4 a = EMISSION_TRANSFORM * vec4(0,1,0,1);
	vec4 b = EMISSION_TRANSFORM * vec4(0,-1,0,1);
	
	// start
	if(CUSTOM.w == 0.0){
		CUSTOM.w = float(INDEX)+1.0;
		
		// needed to pass to draw pass
		CUSTOM.z = amount;
		
		// needed to initialize in case of CUSTOM.w == 2.0
		TRANSFORM = mat4(a,a,b,b);
	}
	
	// restart
	if(CUSTOM.w == amount+1.0){
		CUSTOM.w = 1.0;
	}
	
	if(CUSTOM.w == 1.0){
		// sets the quad to the line to cache this frame, it is not yet visible
		TRANSFORM = mat4(a,a,b,b);
	}
	
	if(CUSTOM.w == 2.0){
		// sets the right edge of the quad
		TRANSFORM[1] = a;
		TRANSFORM[2] = b;
	}

	CUSTOM.w++;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5yjly"]
shader = SubResource("Shader_ras3i")

[sub_resource type="Shader" id="Shader_lu3jv"]
code = "shader_type spatial;

render_mode unshaded,world_vertex_coords,cull_disabled;

uniform sampler2D tex : repeat_disable, source_color, hint_default_white;
uniform sampler2D color_ramp : repeat_disable, source_color, hint_default_white;
uniform sampler2D curve : repeat_disable, hint_default_white;
uniform mat4 emmission_transform = mat4(1);
uniform int flags = 0;
/*uniform bool vertical_texture = false;
uniform bool use_red_as_alpha = false;
uniform bool billboard = false;
uniform bool dewiggle = false;
uniform bool snap_to_transform = false;*/

#define vertical_texture  bool(flags & 1)
#define use_red_as_alpha  bool(flags & 2)
#define billboard		  bool(flags & 4)
#define dewiggle 		  bool(flags & 8)
#define snap_to_transform bool(flags & 16)
#define clip_overlaps bool(flags & 32)


varying float scale_interp;
varying vec2 clip;
varying vec2 mesh_uv;
void vertex(){
	mesh_uv = UV;
	
	mat4 my_model_matrix = MODEL_MATRIX;
	if(snap_to_transform && INSTANCE_CUSTOM.w==2.0){
		my_model_matrix[1] = emmission_transform * vec4(0,1,0,1);
		my_model_matrix[2] = emmission_transform * vec4(0,-1,0,1);
	}
	
	if(billboard){
		vec3 t0 = my_model_matrix[0].xyz-my_model_matrix[3].xyz;
		vec3 t1 = my_model_matrix[1].xyz-my_model_matrix[2].xyz;
		
		//vec3 up1 = up0;
		vec3 up0 = length(t0)*normalize(
			cross(
				my_model_matrix[3].xyz-INV_VIEW_MATRIX[3].xyz,
				//-INV_VIEW_MATRIX[2].xyz,
				t0));
		vec3 up1 = length(t1)*normalize(
			cross(
				my_model_matrix[2].xyz-INV_VIEW_MATRIX[3].xyz,
				//-INV_VIEW_MATRIX[2].xyz,
				t1));
		
		my_model_matrix[0] = my_model_matrix[3];
		my_model_matrix[1] = my_model_matrix[2];
		
		my_model_matrix[0].xyz += up0;
		my_model_matrix[3].xyz -= up0;
		
		my_model_matrix[1].xyz += up1;
		my_model_matrix[2].xyz -= up1;
	}
	
	vec3 a = mix(my_model_matrix[1].xyz,my_model_matrix[0].xyz,UV.x);
	vec3 b = mix(my_model_matrix[2].xyz,my_model_matrix[3].xyz,UV.x);

	UV.x = (UV.x + INSTANCE_CUSTOM.w-1.0 - 2.0)/(INSTANCE_CUSTOM.z-1.0);

	
	float h = textureLod(curve, vec2(UV.x), 0.0).x;//h=1.0;
	
	VERTEX = mix(a,b,(UV.y-0.5)*h + 0.5);

	if(dewiggle){
		scale_interp = h;
		UV *= scale_interp;
	}
	
		
	clip.x = dot(VERTEX - INV_VIEW_MATRIX[3].xyz,cross(my_model_matrix[1].xyz - INV_VIEW_MATRIX[3].xyz,my_model_matrix[2].xyz - INV_VIEW_MATRIX[3].xyz));
	clip.y = dot(VERTEX - INV_VIEW_MATRIX[3].xyz,cross(my_model_matrix[3].xyz - INV_VIEW_MATRIX[3].xyz,my_model_matrix[0].xyz - INV_VIEW_MATRIX[3].xyz));
}

void fragment(){
	//if(billboard && !FRONT_FACING) discard;
	
	vec2 clip0 = clip;
	float ababab = clip0.x*clip0.y;
	//ababab += dFdx(ababab) + dFdy(ababab);
	//clip0 -= fwidth(clip0);
	if(clip_overlaps && ababab < 0.0) { 
		
		
		
		if(abs(mesh_uv.x-0.5)<0.5)
			discard;
	}
	
	vec2 base_uv = UV;

	if(dewiggle){
		base_uv /= scale_interp;
	}
	
	vec2 raw_uv = base_uv;

	if(vertical_texture){
		base_uv = base_uv.yx;
	}
	
	vec4 T = textureLod(tex, base_uv, 0.0);
	ALBEDO = T.rgb;
	ALPHA = T.a;
	
	if(use_red_as_alpha){
		ALBEDO = vec3(1);
		ALPHA = T.r;
	}
	
	T = textureLod(color_ramp, raw_uv, 0.0);
	ALBEDO *= T.rgb;
	ALPHA *= T.a;
	
	//ALBEDO = vec3(UV,0);
	
	if((base_uv.x < .01) || (.99 < base_uv.x)){
		//ALBEDO = vec3(1,0,1);
	}
}"

[sub_resource type="Gradient" id="Gradient_w6t7k"]
offsets = PackedFloat32Array(0.00431034, 1)
colors = PackedColorArray(1, 0.470588, 0, 1, 1, 0.431373, 0, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_cjrym"]
gradient = SubResource("Gradient_w6t7k")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_e80fu"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_lu3jv")
shader_parameter/emmission_transform = Projection(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
shader_parameter/flags = 40
shader_parameter/tex = ExtResource("4_oc1t2")
shader_parameter/color_ramp = SubResource("GradientTexture1D_cjrym")
shader_parameter/curve = ExtResource("5_e2cg4")

[sub_resource type="QuadMesh" id="QuadMesh_a1rq5"]
material = SubResource("ShaderMaterial_e80fu")

[sub_resource type="Animation" id="Animation_5nsmi"]
resource_name = "ExtendBlade"
length = 0.0500018
step = 0.0166667
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Blade:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0500001),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(1, 0.001, 1), Vector3(2, 1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sparks:emitting")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0.0166667),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("GPUTrail3D:length")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0.0166667),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [12]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("GPUTrail3D:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0.0166667),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Blade:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="Animation" id="Animation_yov3w"]
resource_name = "RetractBlade"
length = 0.0500018
step = 0.0166667
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Blade:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.05),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(2, 1, 1), Vector3(1, 0.001, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sparks:emitting")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0.0166667),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("GPUTrail3D:length")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0.0166667),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("GPUTrail3D:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0.0166667),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Blade:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0.0500001),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="Animation" id="Animation_bp0wv"]
resource_name = "ExtendMegaBlade"
length = 0.0500018
step = 0.0166667
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Blade:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0500001),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(1, 0.001, 1), Vector3(2, 1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sparks:emitting")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0.0166667),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("GPUTrail3D:length")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0.0166667),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [7]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("GPUTrail3D:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0.0166667),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Blade:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="Animation" id="Animation_5l7ml"]
resource_name = "RetractMegaBlade"
length = 0.250002
step = 0.0166667
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Blade:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.25),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(2, 1, 1), Vector3(1, 0.001, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sparks:emitting")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0.133334),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("GPUTrail3D:length")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0.133334),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("GPUTrail3D:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0.133334),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Blade:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0.25),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_v7csg"]
_data = {
"ExtendBlade": SubResource("Animation_5nsmi"),
"ExtendMegaBlade": SubResource("Animation_bp0wv"),
"RetractBlade": SubResource("Animation_yov3w"),
"RetractMegaBlade": SubResource("Animation_5l7ml")
}

[sub_resource type="Curve" id="Curve_1gu83"]
max_value = 3.0
_data = [Vector2(2.08165e-12, 3), 0.0, 0.0, 0, 0, Vector2(1, 0.01), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_e5fyj"]
curve = SubResource("Curve_1gu83")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_0eofo"]
emission_shape = 3
emission_box_extents = Vector3(2.08165e-12, 2.08165e-12, 2)
particle_flag_align_y = true
direction = Vector3(2.08165e-12, 2.08165e-12, -1)
spread = 30.0
flatness = 1.0
gravity = Vector3(2.08165e-12, -4.9, 2.08165e-12)
initial_velocity_min = 20.0
initial_velocity_max = 20.0
scale_curve = SubResource("CurveTexture_e5fyj")
color = Color(1.50196, 0.211765, 0, 1)

[sub_resource type="Curve" id="Curve_7ffhd"]
_data = [Vector2(0, 0), 0.0, 2.36625, 0, 0, Vector2(0.252444, 0.192954), 0.0, 0.0, 0, 0, Vector2(1, 0), 0.0, 0.0, 0, 0]
point_count = 3

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_vssj3"]
shading_mode = 0
vertex_color_use_as_albedo = true

[sub_resource type="TubeTrailMesh" id="TubeTrailMesh_hr7ra"]
material = SubResource("StandardMaterial3D_vssj3")
radius = 0.25
curve = SubResource("Curve_7ffhd")

[node name="XBlade" instance=ExtResource("1_magb4")]
transform = Transform3D(0.15, -5.2318e-17, 7.62298e-24, 0, -6.55671e-09, -0.5, 5.2318e-17, 0.15, -2.18557e-08, 0, 0, 0)

[node name="Blade" parent="." index="0"]
transform = Transform3D(2, 1.57912e-22, 6.90255e-30, 0, -4.37114e-08, 1, 3.15824e-22, -1, -4.37114e-08, -8.20059e-20, -4.88244e-19, 0.000109134)
surface_material_override/0 = SubResource("StandardMaterial3D_qbx8q")

[node name="GPUTrail3D" type="GPUParticles3D" parent="." index="1"]
transform = Transform3D(3.75001, -4.41933e-22, -9.49323e-22, 9.92314e-22, -1.63918e-07, 3.75001, -4.41932e-22, -3.75, -1.63918e-07, 2.08165e-12, 1.7862e-12, -3.985)
lifetime = 8.0
explosiveness = 1.0
fixed_fps = 0
visibility_aabb = AABB(-4, -6, -4, 8, 8, 8)
process_material = SubResource("ShaderMaterial_5yjly")
draw_pass_1 = SubResource("QuadMesh_a1rq5")
script = ExtResource("6_bnh63")
length = 8
color_ramp = SubResource("GradientTexture1D_cjrym")
curve = ExtResource("5_e2cg4")
_defaults_have_been_set = true

[node name="AnimationPlayer" parent="." index="2"]
libraries = {
"": SubResource("AnimationLibrary_v7csg")
}

[node name="Sparks" type="GPUParticles3D" parent="." index="3"]
transform = Transform3D(1, -1.30915e-21, -1.58819e-22, 6.22547e-22, 1, -2.16794e-13, -4.97885e-24, 8.06457e-15, 1, 2.08165e-12, -7.06852e-10, -4.00486)
cast_shadow = 0
custom_aabb = AABB(-100, -100, -100, 200, 200, 200)
amount = 100
lifetime = 0.7
fixed_fps = 60
interpolate = false
fract_delta = false
process_material = SubResource("ParticleProcessMaterial_0eofo")
draw_pass_1 = SubResource("TubeTrailMesh_hr7ra")

[node name="XLeftArm" parent="." index="4" instance=ExtResource("5_er6wh")]
transform = Transform3D(0.667, -1.00714e-07, -2.00824e-08, -1.00714e-07, -0.667, 1.16272e-08, -1.00714e-07, -5.8311e-08, -0.133, 2.08165e-12, 1.22712e-07, 0.842185)
