[gd_scene load_steps=24 format=3 uid="uid://ds0qy8lfh8wfn"]

[ext_resource type="Script" path="res://DisappearRB.gd" id="1_bn4tn"]
[ext_resource type="PackedScene" uid="uid://dhylakey10mb7" path="res://glb_inherited_scenes/x_bottom_head_piece.tscn" id="1_tiffj"]
[ext_resource type="Texture2D" uid="uid://crk6pkb7e5rwc" path="res://GPUTrail-main/defaults/texture.tres" id="5_k2s7u"]
[ext_resource type="Texture2D" uid="uid://ct31fhxvcragr" path="res://GPUTrail-main/defaults/curve.tres" id="6_gw7vo"]
[ext_resource type="Script" path="res://GPUTrail-main/GPUTrail3D.gd" id="7_mn2yg"]

[sub_resource type="BoxShape3D" id="BoxShape3D_rwqsk"]
size = Vector3(0.2, 0.2, 0.2)

[sub_resource type="Curve" id="Curve_tw60s"]
_data = [Vector2(2.08165e-12, 1), 0.0, 0.0, 0, 0, Vector2(1, 2.08165e-12), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_lecfy"]
curve = SubResource("Curve_tw60s")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_3mh6k"]
direction = Vector3(2.08165e-12, 2.08165e-12, -1)
spread = 10.0
gravity = Vector3(2.08165e-12, 2.08165e-12, 2.08165e-12)
initial_velocity_min = 1.0
initial_velocity_max = 1.0
scale_curve = SubResource("CurveTexture_lecfy")
color = Color(1, 0.270588, 0, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_5meq8"]
shading_mode = 0
vertex_color_use_as_albedo = true
billboard_mode = 1
billboard_keep_scale = true

[sub_resource type="QuadMesh" id="QuadMesh_l11nv"]
material = SubResource("StandardMaterial3D_5meq8")
size = Vector2(0.1, 0.1)

[sub_resource type="Curve" id="Curve_ifjuo"]
_data = [Vector2(2.08165e-12, 1), 0.0, 0.0, 0, 0, Vector2(1, 2.08165e-12), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_pgbgv"]
curve = SubResource("Curve_ifjuo")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_5isge"]
particle_flag_align_y = true
direction = Vector3(2.08165e-12, 1, 2.08165e-12)
spread = 90.0
gravity = Vector3(2.08165e-12, 2.08165e-12, 2.08165e-12)
initial_velocity_min = 10.0
initial_velocity_max = 10.0
scale_curve = SubResource("CurveTexture_pgbgv")
color = Color(1, 0.270588, 0, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_134jl"]
shading_mode = 0
vertex_color_use_as_albedo = true
disable_receive_shadows = true

[sub_resource type="CapsuleMesh" id="CapsuleMesh_1ejyh"]
material = SubResource("StandardMaterial3D_134jl")
radius = 0.02
height = 0.4

[sub_resource type="Shader" id="Shader_5hvj8"]
code = "shader_type particles;

render_mode keep_data,disable_force,disable_velocity;



void process() {
	// CUSTOM.w tracks the particles place in the trail, in range (0..LIFETIME]
	// requires that LIFETIME = number of particles
	const float amount = LIFETIME;
	
	vec4 a = EMISSION_TRANSFORM * vec4(0,1,0,1);
	vec4 b = EMISSION_TRANSFORM * vec4(0,-1,0,1);
	
	// start
	if(CUSTOM.w == 0.0){
		CUSTOM.w = float(INDEX)+1.0;
		
		// needed to pass to draw pass
		CUSTOM.z = amount;
		
		// needed to initialize in case of CUSTOM.w == 2.0
		TRANSFORM = mat4(a,a,b,b);
	}
	
	// restart
	if(CUSTOM.w == amount+1.0){
		CUSTOM.w = 1.0;
	}
	
	if(CUSTOM.w == 1.0){
		// sets the quad to the line to cache this frame, it is not yet visible
		TRANSFORM = mat4(a,a,b,b);
	}
	
	if(CUSTOM.w == 2.0){
		// sets the right edge of the quad
		TRANSFORM[1] = a;
		TRANSFORM[2] = b;
	}

	CUSTOM.w++;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_pqtim"]
shader = SubResource("Shader_5hvj8")

[sub_resource type="Shader" id="Shader_7yne3"]
code = "shader_type spatial;

render_mode unshaded,world_vertex_coords,cull_disabled;

uniform sampler2D tex : repeat_disable, source_color, hint_default_white;
uniform sampler2D color_ramp : repeat_disable, source_color, hint_default_white;
uniform sampler2D curve : repeat_disable, hint_default_white;
uniform mat4 emmission_transform = mat4(1);
uniform int flags = 0;
/*uniform bool vertical_texture = false;
uniform bool use_red_as_alpha = false;
uniform bool billboard = false;
uniform bool dewiggle = false;
uniform bool snap_to_transform = false;*/

#define vertical_texture  bool(flags & 1)
#define use_red_as_alpha  bool(flags & 2)
#define billboard		  bool(flags & 4)
#define dewiggle 		  bool(flags & 8)
#define snap_to_transform bool(flags & 16)
#define clip_overlaps bool(flags & 32)


varying float scale_interp;
varying vec2 clip;
varying vec2 mesh_uv;
void vertex(){
	mesh_uv = UV;
	
	mat4 my_model_matrix = MODEL_MATRIX;
	if(snap_to_transform && INSTANCE_CUSTOM.w==2.0){
		my_model_matrix[1] = emmission_transform * vec4(0,1,0,1);
		my_model_matrix[2] = emmission_transform * vec4(0,-1,0,1);
	}
	
	if(billboard){
		vec3 t0 = my_model_matrix[0].xyz-my_model_matrix[3].xyz;
		vec3 t1 = my_model_matrix[1].xyz-my_model_matrix[2].xyz;
		
		//vec3 up1 = up0;
		vec3 up0 = length(t0)*normalize(
			cross(
				my_model_matrix[3].xyz-INV_VIEW_MATRIX[3].xyz,
				//-INV_VIEW_MATRIX[2].xyz,
				t0));
		vec3 up1 = length(t1)*normalize(
			cross(
				my_model_matrix[2].xyz-INV_VIEW_MATRIX[3].xyz,
				//-INV_VIEW_MATRIX[2].xyz,
				t1));
		
		my_model_matrix[0] = my_model_matrix[3];
		my_model_matrix[1] = my_model_matrix[2];
		
		my_model_matrix[0].xyz += up0;
		my_model_matrix[3].xyz -= up0;
		
		my_model_matrix[1].xyz += up1;
		my_model_matrix[2].xyz -= up1;
	}
	
	vec3 a = mix(my_model_matrix[1].xyz,my_model_matrix[0].xyz,UV.x);
	vec3 b = mix(my_model_matrix[2].xyz,my_model_matrix[3].xyz,UV.x);

	UV.x = (UV.x + INSTANCE_CUSTOM.w-1.0 - 2.0)/(INSTANCE_CUSTOM.z-1.0);

	
	float h = textureLod(curve, vec2(UV.x), 0.0).x;//h=1.0;
	
	VERTEX = mix(a,b,(UV.y-0.5)*h + 0.5);

	if(dewiggle){
		scale_interp = h;
		UV *= scale_interp;
	}
	
		
	clip.x = dot(VERTEX - INV_VIEW_MATRIX[3].xyz,cross(my_model_matrix[1].xyz - INV_VIEW_MATRIX[3].xyz,my_model_matrix[2].xyz - INV_VIEW_MATRIX[3].xyz));
	clip.y = dot(VERTEX - INV_VIEW_MATRIX[3].xyz,cross(my_model_matrix[3].xyz - INV_VIEW_MATRIX[3].xyz,my_model_matrix[0].xyz - INV_VIEW_MATRIX[3].xyz));
}

void fragment(){
	//if(billboard && !FRONT_FACING) discard;
	
	vec2 clip0 = clip;
	float ababab = clip0.x*clip0.y;
	//ababab += dFdx(ababab) + dFdy(ababab);
	//clip0 -= fwidth(clip0);
	if(clip_overlaps && ababab < 0.0) { 
		
		
		
		if(abs(mesh_uv.x-0.5)<0.5)
			discard;
	}
	
	vec2 base_uv = UV;

	if(dewiggle){
		base_uv /= scale_interp;
	}
	
	vec2 raw_uv = base_uv;

	if(vertical_texture){
		base_uv = base_uv.yx;
	}
	
	vec4 T = textureLod(tex, base_uv, 0.0);
	ALBEDO = T.rgb;
	ALPHA = T.a;
	
	if(use_red_as_alpha){
		ALBEDO = vec3(1);
		ALPHA = T.r;
	}
	
	T = textureLod(color_ramp, raw_uv, 0.0);
	ALBEDO *= T.rgb;
	ALPHA *= T.a;
	
	//ALBEDO = vec3(UV,0);
	
	if((base_uv.x < .01) || (.99 < base_uv.x)){
		//ALBEDO = vec3(1,0,1);
	}
}"

[sub_resource type="Gradient" id="Gradient_3aul7"]
offsets = PackedFloat32Array(0)
colors = PackedColorArray(1, 0.270588, 0, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_hqt7s"]
gradient = SubResource("Gradient_3aul7")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_6v62q"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_7yne3")
shader_parameter/emmission_transform = Projection(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
shader_parameter/flags = 44
shader_parameter/tex = SubResource("GradientTexture1D_hqt7s")
shader_parameter/color_ramp = ExtResource("5_k2s7u")
shader_parameter/curve = ExtResource("6_gw7vo")

[sub_resource type="QuadMesh" id="QuadMesh_mt61w"]
material = SubResource("ShaderMaterial_6v62q")

[node name="XBottomHeadPieceRB" type="RigidBody3D"]
transform = Transform3D(1, -3.48787e-16, 3.48787e-16, 3.48787e-16, 1, -3.48787e-16, -3.48787e-16, 3.48787e-16, 1, 0, 0, 0)
collision_layer = 8
collision_mask = 2
script = ExtResource("1_bn4tn")

[node name="8164_bottom_head_piece" parent="." instance=ExtResource("1_tiffj")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.08165e-12, 0.136726, 0.131107)

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("BoxShape3D_rwqsk")

[node name="FlightParticles" type="GPUParticles3D" parent="."]
transform = Transform3D(-0.999998, 8.08671e-11, 0.00185004, 0.00185004, 4.37113e-08, 0.999998, -6.98218e-16, 1, -4.37114e-08, 0, 0, 0)
amount = 12
process_material = SubResource("ParticleProcessMaterial_3mh6k")
draw_pass_1 = SubResource("QuadMesh_l11nv")

[node name="BombParticles" type="GPUParticles3D" parent="."]
transform = Transform3D(1, -6.97574e-16, -1.5246e-23, -1.5246e-23, -4.37114e-08, 1, -6.97574e-16, -1, -4.37114e-08, 0, 0, 0)
amount = 5
process_material = SubResource("ParticleProcessMaterial_5isge")
draw_pass_1 = SubResource("CapsuleMesh_1ejyh")

[node name="GPUTrail3D" type="GPUParticles3D" parent="."]
transform = Transform3D(0.1, -1.21652e-32, -5.19733e-25, -5.19733e-25, 0.1, 5.19733e-25, 0, 0, 0.1, 0, 0, 0)
amount = 20
lifetime = 20.0
explosiveness = 1.0
fixed_fps = 0
process_material = SubResource("ShaderMaterial_pqtim")
draw_pass_1 = SubResource("QuadMesh_mt61w")
script = ExtResource("7_mn2yg")
length = 20
color_ramp = ExtResource("5_k2s7u")
curve = ExtResource("6_gw7vo")
billboard = true
_defaults_have_been_set = true
